// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cache_access_cache_access,hls_ip_2023_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvf1517-3-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.432000,HLS_SYN_LAT=58,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=147,HLS_SYN_LUT=552,HLS_VERSION=2023_2_2}" *)

module cache_access (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        address,
        value_r,
        action,
        mymem_address0,
        mymem_ce0,
        mymem_we0,
        mymem_d0,
        mymem_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] address;
input  [31:0] value_r;
input  [0:0] action;
output  [10:0] mymem_address0;
output   mymem_ce0;
output   mymem_we0;
output  [31:0] mymem_d0;
input  [31:0] mymem_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] mymem_address0;
reg mymem_ce0;
reg mymem_we0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] cache_tag_address0;
reg    cache_tag_ce0;
reg    cache_tag_we0;
wire   [2:0] cache_tag_q0;
reg   [0:0] set_old_3;
reg   [0:0] set_old_0;
reg   [0:0] set_old_1;
reg   [0:0] set_old_2;
reg   [2:0] cache_valid_address0;
reg    cache_valid_ce0;
reg    cache_valid_we0;
wire   [0:0] cache_valid_q0;
reg   [2:0] cache_dirty_address0;
reg    cache_dirty_ce0;
reg    cache_dirty_we0;
reg   [0:0] cache_dirty_d0;
wire   [0:0] cache_dirty_q0;
reg   [8:0] cache_address0;
reg    cache_ce0;
reg    cache_we0;
reg   [31:0] cache_d0;
wire   [31:0] cache_q0;
reg   [2:0] tag_reg_443;
wire   [1:0] index_fu_263_p4;
reg   [1:0] index_reg_449;
wire   [5:0] offset_fu_273_p1;
reg   [5:0] offset_reg_458;
wire   [2:0] zerod_fu_277_p3;
reg   [2:0] zerod_reg_464;
wire   [0:0] action_read_read_fu_90_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] address_1_fu_293_p2;
reg   [10:0] address_1_reg_485;
wire   [2:0] oned_fu_298_p2;
reg   [2:0] oned_reg_490;
wire   [0:0] grp_fu_248_p2;
reg   [0:0] icmp_ln43_reg_495;
wire   [63:0] zext_ln57_fu_401_p1;
reg   [63:0] zext_ln57_reg_507;
wire    ap_CS_fsm_state3;
reg   [2:0] cache_valid_addr_reg_515;
wire   [8:0] tmp_1_fu_406_p3;
reg   [8:0] tmp_1_reg_520;
wire    ap_CS_fsm_state4;
wire   [0:0] or_ln57_fu_420_p2;
reg   [0:0] or_ln57_reg_526;
reg   [2:0] cache_dirty_addr_reg_530;
reg   [0:0] cache_dirty_load_reg_535;
wire    ap_CS_fsm_state5;
reg   [2:0] cache_tag_load_2_reg_544;
wire    ap_CS_fsm_state6;
reg   [8:0] cache_addr_reg_549;
wire    ap_CS_fsm_state9;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_done;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_idle;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_ready;
wire   [10:0] grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_address0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_ce0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_we0;
wire   [31:0] grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_d0;
wire   [8:0] grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_cache_address0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_cache_ce0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_done;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_idle;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_ready;
wire   [10:0] grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_mymem_address0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_mymem_ce0;
wire   [8:0] grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_address0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_ce0;
wire    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_we0;
wire   [31:0] grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_d0;
wire   [2:0] cache_index_fu_363_p3;
reg   [2:0] ap_phi_mux_cache_index_1_phi_fu_191_p6;
reg   [2:0] cache_index_1_reg_188;
reg   [0:0] not_in_cache_reg_200;
reg   [31:0] ap_phi_mux_ret_value_1_phi_fu_219_p4;
reg   [31:0] ret_value_1_reg_216;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state10;
reg    grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start_reg;
wire    ap_CS_fsm_state7;
reg    grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln43_fu_285_p1;
wire   [63:0] zext_ln46_fu_303_p1;
wire   [2:0] cache_tag_addr_3_gep_fu_159_p3;
wire   [63:0] zext_ln72_fu_433_p1;
wire   [2:0] cache_dirty_addr_1_gep_fu_174_p3;
wire   [0:0] xor_ln52_fu_371_p2;
reg    ap_block_state7_on_subcall_done;
reg    ap_block_state9_on_subcall_done;
wire    ap_CS_fsm_state11;
wire   [10:0] zext_ln38_fu_290_p1;
wire   [0:0] icmp_ln9_fu_324_p2;
wire   [0:0] icmp_ln9_1_fu_337_p2;
wire   [0:0] select_ln9_fu_329_p3;
wire   [0:0] icmp_ln9_2_fu_350_p2;
wire   [0:0] select_ln9_1_fu_342_p3;
wire   [0:0] select_ln9_2_fu_355_p3;
wire   [0:0] xor_ln57_fu_414_p2;
wire   [8:0] tmp_2_fu_426_p3;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 set_old_3 = 1'd0;
#0 set_old_0 = 1'd0;
#0 set_old_1 = 1'd0;
#0 set_old_2 = 1'd0;
#0 grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start_reg = 1'b0;
#0 grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start_reg = 1'b0;
end

cache_access_cache_tag_RAM_AUTO_1R1W #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
cache_tag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cache_tag_address0),
    .ce0(cache_tag_ce0),
    .we0(cache_tag_we0),
    .d0(tag_reg_443),
    .q0(cache_tag_q0)
);

cache_access_cache_valid_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
cache_valid_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cache_valid_address0),
    .ce0(cache_valid_ce0),
    .we0(cache_valid_we0),
    .d0(1'd1),
    .q0(cache_valid_q0)
);

cache_access_cache_valid_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
cache_dirty_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cache_dirty_address0),
    .ce0(cache_dirty_ce0),
    .we0(cache_dirty_we0),
    .d0(cache_dirty_d0),
    .q0(cache_dirty_q0)
);

cache_access_cache_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cache_address0),
    .ce0(cache_ce0),
    .we0(cache_we0),
    .d0(cache_d0),
    .q0(cache_q0)
);

cache_access_cache_access_Pipeline_VITIS_LOOP_24_1 grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start),
    .ap_done(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_done),
    .ap_idle(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_idle),
    .ap_ready(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_ready),
    .zext_ln26_3(tmp_1_reg_520),
    .cache_tag_load_2(cache_tag_load_2_reg_544),
    .index(index_reg_449),
    .mymem_address0(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_address0),
    .mymem_ce0(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_ce0),
    .mymem_we0(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_we0),
    .mymem_d0(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_d0),
    .cache_address0(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_cache_address0),
    .cache_ce0(grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_cache_ce0),
    .cache_q0(cache_q0)
);

cache_access_cache_access_Pipeline_VITIS_LOOP_24_11 grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start),
    .ap_done(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_done),
    .ap_idle(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_idle),
    .ap_ready(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_ready),
    .zext_ln26_3(tmp_1_reg_520),
    .address_1(address_1_reg_485),
    .mymem_address0(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_mymem_address0),
    .mymem_ce0(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_mymem_ce0),
    .mymem_q0(mymem_q0),
    .cache_address0(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_address0),
    .cache_ce0(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_ce0),
    .cache_we0(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_we0),
    .cache_d0(grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start_reg <= 1'b1;
        end else if ((grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_ready == 1'b1)) begin
            grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_ready == 1'b1)) begin
            grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd1))) begin
        cache_index_1_reg_188 <= oned_reg_490;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_248_p2 == 1'd1))) begin
        cache_index_1_reg_188 <= zerod_reg_464;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd0))) begin
        cache_index_1_reg_188 <= cache_index_fu_363_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (grp_fu_248_p2 == 1'd1)))) begin
        not_in_cache_reg_200 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd0))) begin
        not_in_cache_reg_200 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ret_value_1_reg_216 <= value_r;
    end else if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == action_read_read_fu_90_p2))) begin
        ret_value_1_reg_216 <= cache_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        address_1_reg_485 <= address_1_fu_293_p2;
        icmp_ln43_reg_495 <= grp_fu_248_p2;
        oned_reg_490[2 : 1] <= oned_fu_298_p2[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cache_addr_reg_549 <= zext_ln72_fu_433_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cache_dirty_addr_reg_530 <= zext_ln57_reg_507;
        or_ln57_reg_526 <= or_ln57_fu_420_p2;
        tmp_1_reg_520[8 : 6] <= tmp_1_fu_406_p3[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        cache_dirty_load_reg_535 <= cache_dirty_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        cache_tag_load_2_reg_544 <= cache_tag_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cache_valid_addr_reg_515 <= zext_ln57_fu_401_p1;
        zext_ln57_reg_507[2 : 0] <= zext_ln57_fu_401_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        index_reg_449 <= {{address[7:6]}};
        offset_reg_458 <= offset_fu_273_p1;
        tag_reg_443 <= {{address[10:8]}};
        zerod_reg_464[2 : 1] <= zerod_fu_277_p3[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((index_reg_449 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd0))) begin
        set_old_0 <= xor_ln52_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((index_reg_449 == 2'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd0))) begin
        set_old_1 <= xor_ln52_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((index_reg_449 == 2'd2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd0))) begin
        set_old_2 <= xor_ln52_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((index_reg_449 == 2'd3) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0) & (grp_fu_248_p2 == 1'd0))) begin
        set_old_3 <= xor_ln52_fu_371_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state7_on_subcall_done)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state9_on_subcall_done)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln43_reg_495 == 1'd0))) begin
        if ((grp_fu_248_p2 == 1'd1)) begin
            ap_phi_mux_cache_index_1_phi_fu_191_p6 = oned_reg_490;
        end else if ((grp_fu_248_p2 == 1'd0)) begin
            ap_phi_mux_cache_index_1_phi_fu_191_p6 = cache_index_fu_363_p3;
        end else begin
            ap_phi_mux_cache_index_1_phi_fu_191_p6 = cache_index_1_reg_188;
        end
    end else begin
        ap_phi_mux_cache_index_1_phi_fu_191_p6 = cache_index_1_reg_188;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'd1 == action_read_read_fu_90_p2))) begin
        ap_phi_mux_ret_value_1_phi_fu_219_p4 = cache_q0;
    end else begin
        ap_phi_mux_ret_value_1_phi_fu_219_p4 = ret_value_1_reg_216;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        cache_address0 = cache_addr_reg_549;
    end else if (((1'b1 == ap_CS_fsm_state9) & (or_ln57_reg_526 == 1'd1))) begin
        cache_address0 = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_address0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (cache_dirty_load_reg_535 == 1'd1))) begin
        cache_address0 = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_cache_address0;
    end else begin
        cache_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        cache_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (or_ln57_reg_526 == 1'd1))) begin
        cache_ce0 = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_ce0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (cache_dirty_load_reg_535 == 1'd1))) begin
        cache_ce0 = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_cache_ce0;
    end else begin
        cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cache_d0 = value_r;
    end else if (((1'b1 == ap_CS_fsm_state9) & (or_ln57_reg_526 == 1'd1))) begin
        cache_d0 = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_d0;
    end else begin
        cache_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cache_dirty_address0 = cache_dirty_addr_1_gep_fu_174_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cache_dirty_address0 = cache_dirty_addr_reg_530;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cache_dirty_address0 = zext_ln57_reg_507;
    end else begin
        cache_dirty_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7)))) begin
        cache_dirty_ce0 = 1'b1;
    end else begin
        cache_dirty_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        cache_dirty_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cache_dirty_d0 = 1'd0;
    end else begin
        cache_dirty_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == action_read_read_fu_90_p2) & (1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9)))) begin
        cache_dirty_we0 = 1'b1;
    end else begin
        cache_dirty_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        cache_tag_address0 = cache_tag_addr_3_gep_fu_159_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        cache_tag_address0 = zext_ln57_reg_507;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cache_tag_address0 = zext_ln46_fu_303_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        cache_tag_address0 = zext_ln43_fu_285_p1;
    end else begin
        cache_tag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        cache_tag_ce0 = 1'b1;
    end else begin
        cache_tag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        cache_tag_we0 = 1'b1;
    end else begin
        cache_tag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        cache_valid_address0 = cache_valid_addr_reg_515;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        cache_valid_address0 = zext_ln57_fu_401_p1;
    end else begin
        cache_valid_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7)))) begin
        cache_valid_ce0 = 1'b1;
    end else begin
        cache_valid_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        cache_valid_we0 = 1'b1;
    end else begin
        cache_valid_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cache_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (or_ln57_reg_526 == 1'd1))) begin
        cache_we0 = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_cache_we0;
    end else begin
        cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (or_ln57_reg_526 == 1'd1))) begin
        mymem_address0 = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_mymem_address0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (cache_dirty_load_reg_535 == 1'd1))) begin
        mymem_address0 = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_address0;
    end else begin
        mymem_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (or_ln57_reg_526 == 1'd1))) begin
        mymem_ce0 = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_mymem_ce0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (cache_dirty_load_reg_535 == 1'd1))) begin
        mymem_ce0 = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_ce0;
    end else begin
        mymem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (cache_dirty_load_reg_535 == 1'd1))) begin
        mymem_we0 = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_we0;
    end else begin
        mymem_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (or_ln57_fu_420_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((cache_dirty_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (1'd1 == action_read_read_fu_90_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'd0 == action_read_read_fu_90_p2) & (1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign action_read_read_fu_90_p2 = action;

assign address_1_fu_293_p2 = (address - zext_ln38_fu_290_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_done == 1'b0) & (cache_dirty_load_reg_535 == 1'd1));
end

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_done == 1'b0) & (or_ln57_reg_526 == 1'd1));
end

assign ap_return = ap_phi_mux_ret_value_1_phi_fu_219_p4;

assign cache_dirty_addr_1_gep_fu_174_p3 = zext_ln57_reg_507;

assign cache_index_fu_363_p3 = {{index_reg_449}, {select_ln9_2_fu_355_p3}};

assign cache_tag_addr_3_gep_fu_159_p3 = zext_ln57_reg_507;

assign grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start = grp_cache_access_Pipeline_VITIS_LOOP_24_11_fu_238_ap_start_reg;

assign grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_ap_start_reg;

assign grp_fu_248_p2 = ((cache_tag_q0 == tag_reg_443) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_337_p2 = ((index_reg_449 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln9_2_fu_350_p2 = ((index_reg_449 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_324_p2 = ((index_reg_449 == 2'd0) ? 1'b1 : 1'b0);

assign index_fu_263_p4 = {{address[7:6]}};

assign mymem_d0 = grp_cache_access_Pipeline_VITIS_LOOP_24_1_fu_226_mymem_d0;

assign offset_fu_273_p1 = address[5:0];

assign oned_fu_298_p2 = (zerod_reg_464 | 3'd1);

assign or_ln57_fu_420_p2 = (xor_ln57_fu_414_p2 | not_in_cache_reg_200);

assign select_ln9_1_fu_342_p3 = ((icmp_ln9_1_fu_337_p2[0:0] == 1'b1) ? set_old_1 : select_ln9_fu_329_p3);

assign select_ln9_2_fu_355_p3 = ((icmp_ln9_2_fu_350_p2[0:0] == 1'b1) ? set_old_2 : select_ln9_1_fu_342_p3);

assign select_ln9_fu_329_p3 = ((icmp_ln9_fu_324_p2[0:0] == 1'b1) ? set_old_0 : set_old_3);

assign tmp_1_fu_406_p3 = {{cache_index_1_reg_188}, {6'd0}};

assign tmp_2_fu_426_p3 = {{cache_index_1_reg_188}, {offset_reg_458}};

assign xor_ln52_fu_371_p2 = (select_ln9_2_fu_355_p3 ^ 1'd1);

assign xor_ln57_fu_414_p2 = (cache_valid_q0 ^ 1'd1);

assign zerod_fu_277_p3 = {{index_fu_263_p4}, {1'd0}};

assign zext_ln38_fu_290_p1 = offset_reg_458;

assign zext_ln43_fu_285_p1 = zerod_fu_277_p3;

assign zext_ln46_fu_303_p1 = oned_fu_298_p2;

assign zext_ln57_fu_401_p1 = ap_phi_mux_cache_index_1_phi_fu_191_p6;

assign zext_ln72_fu_433_p1 = tmp_2_fu_426_p3;

always @ (posedge ap_clk) begin
    zerod_reg_464[0] <= 1'b0;
    oned_reg_490[0] <= 1'b1;
    zext_ln57_reg_507[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_1_reg_520[5:0] <= 6'b000000;
end

endmodule //cache_access
